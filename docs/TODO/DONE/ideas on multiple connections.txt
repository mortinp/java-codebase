Tengo que adicionarle al framework la posibilidad de crear conexiones a mas de una fuente de datos.

Para esto, ConnectionJDBC tiene que dejar de ser estatica y poderse crear objetos de este tipo con diferentes configuraciones.

Lo que se puede hacer es tener una clase AbstractConnection que defina solamente el metodo getConnection(). Asi, se pueden definir varios tipos de conexiones a diferentes fuentes de datos: odbc, jdbc, etc. Cada uno de estos tipos de conexion necesita una configuracion diferente. Ademas, estos objetos funcionarian igual que ConnectionJDBC, o sea, como un pool de conexiones.

Por otro lado, tenemos que tener un mecanismo para especificar de manera facil la conexion que cada DAO va a usar. Por ejemplo, se podria pasar un objeto conexion al constructor de cada DAO, el cual seria usado para obtener las conexiones. Pero de esta forma estariamos creando una pool de conexiones para cada DAO, incluso cuando estos se conecten a la misma fuente de datos. POr tanto, lo mejor es hacer cada una de las conexiones a cada fuente de datos accesible globalmente, y tener ademas un solo objeto por cada fuente de datos. 

Lo otro es que debemos tener un registro con todos los objetos de cada tipo de conexion para acceder a las mismas a traves de este registro. Dicho registro contendria un mapa que relaciona el nombre asignado a la fuente de datos, con el objeto conexion que se encarga de dicha fuente de datos, y deberia ser configurado al iniciarse la aplicacion. Asi, siempre que se quiera acceder a un objeto conexion, se haria a traves del registro y usando el nombre de una fuente de datos especifica. Lo mismo ocurre con las transacciones; las transacciones tambien hay que hacerlas a traves del registro.

DONE!!!




